buildscript {
    ext.build_gradle_version = '7.2.0'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
        maven { url 'https://dl.bintray.com/ppartisan/maven/' }
        maven { url "https://clojars.org/repo/" }
        maven { url "https://jitpack.io" }
        google()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$build_gradle_version"
        
    }
    
}

plugins {
    id 'com.android.application' version '8.11.0' apply false
    id 'com.android.library' version '8.11.0' apply false
    id 'org.jetbrains.kotlin.android' version '2.1.20' apply false
}


allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' } 
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
        maven { url 'https://dl.bintray.com/ppartisan/maven/' }
        maven { url "https://clojars.org/repo/" }
        maven { url "https://jitpack.io" }
        mavenLocal()
        mavenCentral()
        google()
    }
	

        
        
    configurations.all {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22"
        }
    }
	
}

// 根项目 build.gradle
subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android') && project.android.namespace == null) {
            project.android.namespace = project.group // 或手动指定包名
            println("✅ 自动修复命名空间: ${project.name}")
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
